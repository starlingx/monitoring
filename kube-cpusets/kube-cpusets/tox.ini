# Copyright (c) 2021 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
[tox]
envlist = flake8,py39,pylint,cover
minversion = 2.3.2
skipsdist = True
stxdir = {toxinidir}/../../..
[testenv]
setenv = VIRTUAL_ENV={envdir}
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
         OS_STDERR_CAPTURE=1
         OS_STDOUT_CAPTURE=1
         OS_TEST_PATH=./kube_cpusets/tests
         OS_TEST_TIMEOUT=60
         PYTHONDONTWRITEBYTECODE=1
         PYTHONHASHSEED=0
         PYTHONWARNINGS=default::DeprecationWarning
         PIP_DISABLE_PIP_VERSION_CHECK=1
passenv =
    XDG_CACHE_HOME
basepython = python3
sitepackages = False
install_command = pip install \
    -v -v -v \
    -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/starlingx/root/raw/branch/master/build-tools/requirements/debian/upper-constraints.txt} \
    {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       -e{[tox]stxdir}/config/tsconfig/tsconfig
allowlist_externals = find
                      sh
[testenv:stestr]
commands =
  find . -name "*.pyc" -delete
  stestr run {posargs}
  stestr slowest

[testenv:py39]
basepython = python3.9
commands = {[testenv:stestr]commands}


[bandit]
exclude = tests

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
        bandit
commands = bandit --ini tox.ini -n 5 -r kube_cpusets

[flake8]
show-source = True
ignore =
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,release-tag-*
# H106: Don't put vim configuration in source files (off by default).
# H203: Use assertIs(Not)None to check for None (off by default).
# enable: H904 Delay string interpolations at logging calls (off by default).
enable-extensions = H106 H203 H904
max-line-length = 120

[testenv:flake8]
deps = {[testenv]deps}
       flake8-bugbear
usedevelop = False
#skip_install = True
commands =
    flake8 {posargs} .

[testenv:pylint]
basepython = python3.9
deps = {[testenv]deps}
       pylint
commands = pylint kube_cpusets --rcfile=./pylint.rc

[testenv:cover]
setenv =
    PYTHON=coverage run --parallel-mode
    PYTHONDONTWRITEBYTECODE=True
commands = coverage erase
           find . -name "*.pyc" -delete
           stestr run {posargs}
           coverage combine
           coverage html -d cover
           coverage xml -o cover/coverage.xml
           coverage report
